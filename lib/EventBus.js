'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),_pubsub=require('@google-cloud/pubsub'),_helper=require('./helper');function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}/**
  config format
  { projectId: 'project-f69d3', keyFilename: './project-admin-config.json' }
*/var EventBus=function(){function a(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};if(_classCallCheck(this,a),(0,_helper.isEmpty)(b))throw new Error('config not provided');var c=new _pubsub.PubSub(b);this.pubsub=c,this.subscriptions={},this.topicName='',this.subscriptionName='',this.onMessage=this.onMessage.bind(this)}return _createClass(a,[{key:'onMessage',value:function k(a){var b=a,c=b.data,d=b.attributes,e=c.toString('utf8'),f=Object.keys(d).reduce(function(a,b){try{return Object.assign({},a,_defineProperty({},b,JSON.parse(d[b])))}catch(c){return Object.assign({},a,_defineProperty({},b,d[b]))}},{});if(b.data=e,b.attributes=f,this.subscriptions.autoAck){var g=b.attributes,h=b.data,i=b.id,j=b.publishTime;this.subscriptions.fn({attributes:g,data:h,id:i,publishTime:j}),b.ack()}else this.subscriptions.fn(b)}},{key:'subscribe',value:function f(a){var b=a.subscriptionName,c=void 0===b?'':b,d=a.autoAck,e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;if(!c.length)throw new Error('subscriptionName cannot be null or empty');if(!(0,_helper.isFn)(e))throw new Error('callback cannot be null or empty');if(!this.isSubscribed(c))if((0,_helper.isEmpty)(this.subscriptions)){var g=this.pubsub.subscription(c);this.subscriptions={subscription:g,autoAck:void 0!==d&&d,fn:e},this.subscriptionName=c,this.subscriptions.subscription.on('message',this.onMessage)}else throw new Error('Already subscribed to '+this.subscriptionName+'. Instead create new instance.')}},{key:'unsubscribe',value:function b(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:'';this.isSubscribed(a)&&(this.subscriptions.subscription.removeListener('message',this.onMessage),this.subscriptions={},this.subscriptionName='')}},{key:'publish',value:async function i(a,b,c){if(!(0,_helper.isString)(b)){var d=Buffer.from(JSON.stringify(b)),e=await this.pubsub.topic(a).publish(d,c);return e}var f=Buffer.from(b),g=Object.keys(c).reduce(function(a,b){return(0,_helper.isString)(c[b])?Object.assign({},a,_defineProperty({},b,c[b])):Object.assign({},a,_defineProperty({},b,JSON.stringify(c[b])))},{}),h=await this.pubsub.topic(a).publish(f,g);return h}},{key:'isSubscribed',value:function b(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:'';if(!a.length)throw new Error('subscriptionName cannot be null or empty');return this.subscriptionName===a}}]),a}();exports.default=EventBus;